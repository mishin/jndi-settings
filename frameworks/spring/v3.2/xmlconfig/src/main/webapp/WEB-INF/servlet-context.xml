<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
                           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
                           http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
                           ">

    <context:component-scan base-package="com.example"/>

    <mvc:annotation-driven/>


    <jee:jndi-lookup id="messageFromJndi" jndi-name="java:comp/env/testString"
                     lookup-on-startup="true" expected-type="java.lang.String"/>

    <!-- this works too, because java:comp/env is the default search path in the JndiObjectFactoryBean,
         see setJndiName(String jndiName) javadoc:
         Specify the JNDI name to look up. If it doesn't begin with "java:comp/env/"
         this prefix is added automatically if "resourceRef" is set to "true".-->
    <!--
    <jee:jndi-lookup id="messageFromJndi" jndi-name="testString"
                     lookup-on-startup="true" expected-type="java.lang.String"/>
    -->    
</beans>
